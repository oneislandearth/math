{"version":3,"sources":["../src/meters.js"],"names":["Meters","constructor","number","value","Symbol","toPrimitive","type","toFixed","Number"],"mappings":"2DACO,KAAMA,CAAAA,MAAO,CAGlBC,WAAW,CAACC,MAAD,CAAS,CAGlB,KAAKC,KAAL,CAAaD,MACd,CAGD,CAACE,MAAM,CAACC,WAAR,EAAqBC,IAArB,CAA2B,CAGzB,GAAIA,IAAI,EAAI,QAAZ,CAAsB,MAAQ,GAAE,KAAKH,KAAL,CAAWI,OAAX,CAAmB,CAAnB,CAAsB,SAAhC,CAGtB,MAAOC,CAAAA,MAAM,CAAC,KAAKL,KAAN,CACd,CAjBiB,C","sourcesContent":["// Define a class for returning numbers as meters with units\nexport class Meters {\n\n  // Pass the number to Number\n  constructor(number) {\n    \n    // Bind the number value\n    this.value = number;\n  }\n\n  // Round the mesh to three significant figures as to include up to milimeters\n  [Symbol.toPrimitive](type) {\n\n    // Cast the number to a string\n    if (type == 'string') return `${this.value.toFixed(3)} meters`;\n    \n    // Cast the number to a number\n    return Number(this.value);\n  }\n}"],"file":"meters.js"}