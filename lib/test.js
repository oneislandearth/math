"use strict";const{isEqual}=require("./utils");const math=require("mathjs");const app=require("./index");const test=values=>values.map(([equation,expected])=>{console.log(`${equation} = ${eval("app."+equation)} (${isEqual(eval("app."+equation),expected)?"Passed":"Failed"})`)});const testMathJS=values=>values.map(equation=>{console.log(`${equation} = ${eval("app."+equation)} (${isEqual(eval("app."+equation),eval("math."+equation))?"Passed":"Failed: "+eval("math."+equation)})`)});test([["add(5, 5)",10],["add(-5, 5)",0],["add(-5, -5)",-10],["add(-5, -5, -5)",-15],["add(0.1, 0.2)",0.3],["add([10, 10], [10, 10])",[20,20]],["add([0.1, 0.2], [0.2, 0.1])",[0.3,0.3]],["subtract(5, 5)",0],["subtract(-5, 5)",-10],["subtract(-5, -5)",0],["subtract(-5, -5, -5)",5],["subtract(0.1, 0.2)",0.3],["subtract([10, 10], [10, 10])",[0,0]],["subtract([0.1, 0.2], [0.2, 0.1])",[-0.1,0.1]],["negate([5, -5])",[-5,5]],["negate(10)",-10]]);testMathJS(["cross([10, 20, -30], [20, 30 -8])"]);
//# sourceMappingURL=test.js.map